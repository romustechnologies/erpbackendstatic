{"version":3,"sources":["views/admission/StudentListGrid.js","views/admission/StudentList.js","views/admission/Admission.js"],"names":["CustomToolbar","style","backgroundColor","ColumnSelectorGrid","data","getFullName","params","getValue","id","pgetFullName","tehsilDistrict","column","field","headerName","Width","description","hide","minWidth","flex","minwidth","valueGetter","sortComparator","v1","v2","cellParams1","cellParams2","localeCompare","type","valueFormatter","dateVal","Date","parseInt","value","valueFormatted","moment","width","display","height","flexGrow","autoHeight","columns","rows","components","Toolbar","StudentList","collegeID","useSelector","state","useState","setdata","batch","setBatch","batchlist","setBatchList","loader","setLoader","semList","setSemlist","semester","setSemester","useEffect","axios","get","then","res","status","catch","error","alert","Fragment","Grid","container","spacing","item","lg","xs","sm","md","Stack","sx","className","FormControl","fullWidth","InputLabel","Select","labelId","label","onChange","event","target","console","log","map","index","MenuItem","key","Batch","sem","Sem_ID","Sem_Name","justifyContent","alignItems","marginTop","color","size","Notifications","props","fluid","fallback","Component"],"mappings":"6OAaA,SAASA,IACP,OACE,kBAAC,IAAD,CAAsBC,MAAO,CAAEC,gBAAiB,YAC9C,kBAAC,IAAD,MAEA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,OAIS,SAASC,EAAT,GAAuC,IAATC,EAAQ,EAARA,KAC3C,SAASC,EAAYC,GACnB,MAAM,GAAN,OAAUA,EAAOC,SAASD,EAAOE,GAAI,cAAgB,GAArD,YACEF,EAAOC,SAASD,EAAOE,GAAI,eAAiB,GAD9C,YAEIF,EAAOC,SAASD,EAAOE,GAAI,aAAe,IAEhD,SAASC,EAAaH,GACpB,MAAM,GAAN,OAAUA,EAAOC,SAASD,EAAOE,GAAI,eAAiB,GAAtD,YACEF,EAAOC,SAASD,EAAOE,GAAI,gBAAkB,GAD/C,YAEIF,EAAOC,SAASD,EAAOE,GAAI,cAAgB,IAEjD,SAASE,EAAeJ,GACtB,MAAM,GAAN,OAAUA,EAAOC,SAASD,EAAOE,GAAI,WAAa,GAAlD,YACEF,EAAOC,SAASD,EAAOE,GAAI,iBAAmB,IAGlD,IAAMG,EAAS,CACb,CACEC,MAAO,KACPC,WAAY,UACZC,MAAO,GACPC,YACE,4EAEJ,CACEH,MAAO,UACPC,WAAY,gBACZC,MAAO,GACPC,YAAa,wBACbC,MAAM,GAER,CACEJ,MAAO,mBACPC,WAAY,oBACZI,SAAU,IACVC,KAAM,EACNH,YAAa,kCAEf,CACEH,MAAO,YACPC,WAAY,aACZI,SAAU,GACVC,KAAM,EACNF,MAAM,GAER,CACEJ,MAAO,aACPC,WAAY,cACZI,SAAU,GACVC,KAAM,EACNF,MAAM,GAER,CACEJ,MAAO,WACPC,WAAY,YACZI,SAAU,GACVC,KAAM,EACNF,MAAM,GAER,CACEJ,MAAO,WACPC,WAAY,YACZM,SAAU,IACVD,KAAM,EACNE,YAAaf,EACbgB,eAAgB,SAACC,EAAIC,EAAIC,EAAaC,GAAtB,OACdpB,EAAYmB,GAAaE,cAAcrB,EAAYoB,MAEvD,CACEb,MAAO,YACPC,WAAY,cACZM,SAAU,IACVD,KAAM,EACNE,YAAaX,EACbY,eAAgB,SAACC,EAAIC,EAAIC,EAAaC,GAAtB,OACdpB,EAAYmB,GAAaE,cAAcjB,EAAagB,KACtDT,MAAM,GAGR,CACEJ,MAAO,cACPC,WAAY,cACZI,SAAU,GACVC,KAAM,EACNF,MAAM,GAER,CACEJ,MAAO,MACPC,WAAY,MACZI,SAAU,IAEZ,CACEL,MAAO,SACPC,WAAY,SACZC,MAAO,IAET,CACEF,MAAO,eACPC,WAAY,UACZK,KAAM,EACND,SAAU,IACVD,MAAM,GAER,CACEJ,MAAO,iBACPC,WAAY,oBACZK,KAAM,EACND,SAAU,IACVG,YAAaV,EACbW,eAAgB,SAACC,EAAIC,EAAIC,EAAaC,GAAtB,OACdf,EAAec,GAAaE,cAAchB,EAAee,KAC3DT,MAAM,GAER,CACEJ,MAAO,WACPC,WAAY,YACZK,KAAM,EACND,SAAU,IAEZ,CACEL,MAAO,QACPC,WAAY,QACZK,KAAM,EACND,SAAU,IACVD,MAAM,GAER,CACEJ,MAAO,WACPC,WAAY,WACZK,KAAM,EACND,SAAU,IACVD,MAAM,GAER,CACEJ,MAAO,iBACPC,WAAY,cACZK,KAAM,EACND,SAAU,IACVD,MAAM,GAER,CACEJ,MAAO,aACPC,WAAY,eACZK,KAAM,EACND,SAAU,IACVD,MAAM,GAER,CACEJ,MAAO,WACPC,WAAY,UACZK,KAAM,EACND,SAAU,IACVD,MAAM,GAER,CACEJ,MAAO,WACPC,WAAY,UACZK,KAAM,EACND,SAAU,IACVD,MAAM,GAER,CACEJ,MAAO,WACPC,WAAY,UACZK,KAAM,EACND,SAAU,IACVD,MAAM,GAER,CACEJ,MAAO,WACPC,WAAY,UACZK,KAAM,EACND,SAAU,IACVD,MAAM,GAER,CACEJ,MAAO,WACPC,WAAY,UACZK,KAAM,EACND,SAAU,IACVD,MAAM,GAER,CACEJ,MAAO,WACPC,WAAY,UACZK,KAAM,EACND,SAAU,IACVD,MAAM,GAER,CACEJ,MAAO,qBACPC,WAAY,eACZK,KAAM,EACND,SAAU,IACVD,MAAM,GAER,CACEW,KAAM,OACNf,MAAO,uBACPC,WAAY,qBACZK,KAAM,EACND,SAAU,IACVW,eAAgB,SAACtB,GACf,IAAMuB,EAAU,IAAIC,KAAKC,S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","file":"static/js/55.3b11354a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../../axios\";\r\nimport * as moment from \"moment\";\r\nimport {\r\n  DataGrid,\r\n  GridToolbarContainer,\r\n  GridToolbarColumnsButton,\r\n  GridToolbarFilterButton,\r\n  GridToolbarExport,\r\n  GridToolbarDensitySelector,\r\n} from \"@mui/x-data-grid\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nfunction CustomToolbar() {\r\n  return (\r\n    <GridToolbarContainer style={{ backgroundColor: \"#f9f9f9\" }}>\r\n      <GridToolbarColumnsButton\r\n      />\r\n      <GridToolbarFilterButton />\r\n      <GridToolbarDensitySelector />\r\n      <GridToolbarExport />\r\n    </GridToolbarContainer>\r\n  );\r\n}\r\nexport default function ColumnSelectorGrid({ data }) {\r\n  function getFullName(params) {\r\n    return `${params.getValue(params.id, \"firstName\") || \"\"} ${\r\n      params.getValue(params.id, \"middleName\") || \"\"\r\n    } ${params.getValue(params.id, \"lastName\") || \"\"}`;\r\n  }\r\n  function pgetFullName(params) {\r\n    return `${params.getValue(params.id, \"fFirstName\") || \"\"} ${\r\n      params.getValue(params.id, \"fMiddleName\") || \"\"\r\n    } ${params.getValue(params.id, \"fLastName\") || \"\"}`;\r\n  }\r\n  function tehsilDistrict(params) {\r\n    return `${params.getValue(params.id, \"tehsil\") || \"\"} ${\r\n      params.getValue(params.id, \"districtName\") || \"\"\r\n    }`;\r\n  }\r\n  const column = [\r\n    {\r\n      field: \"id\",\r\n      headerName: \"Form No\",\r\n      Width: 10,\r\n      description:\r\n        \"The identification used by the person with access to the online service.\",\r\n    },\r\n    {\r\n      field: \"Roll_no\",\r\n      headerName: \"Class Roll No\",\r\n      Width: 10,\r\n      description: \"Student Roll No Class\",\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"University_RegNo\",\r\n      headerName: \"University Reg No\",\r\n      minWidth: 100,\r\n      flex: 1,\r\n      description: \"University Registration Number\",\r\n    },\r\n    {\r\n      field: \"firstName\",\r\n      headerName: \"First Name\",\r\n      minWidth: 10,\r\n      flex: 1,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"middleName\",\r\n      headerName: \"Middle Name\",\r\n      minWidth: 10,\r\n      flex: 1,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"lastName\",\r\n      headerName: \"Last Name\",\r\n      minWidth: 10,\r\n      flex: 1,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"fullName\",\r\n      headerName: \"Full name\",\r\n      minwidth: 300,\r\n      flex: 1,\r\n      valueGetter: getFullName,\r\n      sortComparator: (v1, v2, cellParams1, cellParams2) =>\r\n        getFullName(cellParams1).localeCompare(getFullName(cellParams2)),\r\n    },\r\n    {\r\n      field: \"pfullName\",\r\n      headerName: \"Father name\",\r\n      minwidth: 260,\r\n      flex: 1,\r\n      valueGetter: pgetFullName,\r\n      sortComparator: (v1, v2, cellParams1, cellParams2) =>\r\n        getFullName(cellParams1).localeCompare(pgetFullName(cellParams2)),\r\n      hide: true,\r\n    },\r\n\r\n    {\r\n      field: \"mothersName\",\r\n      headerName: \"Mother Name\",\r\n      minWidth: 10,\r\n      flex: 1,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"dob\",\r\n      headerName: \"DOB\",\r\n      minWidth: 10,\r\n    },\r\n    {\r\n      field: \"gender\",\r\n      headerName: \"Gender\",\r\n      Width: 10,\r\n    },\r\n    {\r\n      field: \"addressLine1\",\r\n      headerName: \"Address\",\r\n      flex: 1,\r\n      minWidth: 100,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"tehsilDistrict\",\r\n      headerName: \"Tehsil & District\",\r\n      flex: 1,\r\n      minWidth: 100,\r\n      valueGetter: tehsilDistrict,\r\n      sortComparator: (v1, v2, cellParams1, cellParams2) =>\r\n        tehsilDistrict(cellParams1).localeCompare(tehsilDistrict(cellParams2)),\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"mobileNo\",\r\n      headerName: \"Mobile No\",\r\n      flex: 1,\r\n      minWidth: 50,\r\n    },\r\n    {\r\n      field: \"email\",\r\n      headerName: \"Email\",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"category\",\r\n      headerName: \"Category\",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"incomeCategory\",\r\n      headerName: \"Income Cat.\",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"boardRegNo\",\r\n      headerName: \"Board Reg No\",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"Subject1\",\r\n      headerName: \"Paper A\",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"Subject2\",\r\n      headerName: \"Paper B\",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"Subject3\",\r\n      headerName: \"Paper C\",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"Subject4\",\r\n      headerName: \"Paper D\",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"Subject5\",\r\n      headerName: \"Paper E\",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"Subject6\",\r\n      headerName: \"Paper F\",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"University_Form_No\",\r\n      headerName: \"Univ Form No\",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      hide: true,\r\n    },\r\n    {\r\n      type: \"date\",\r\n      field: \"form_submission_date\",\r\n      headerName: \"Date of Submission\",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      valueFormatter: (params) => {\r\n        const dateVal = new Date(parseInt(params.value, 10));\r\n        const valueFormatted = moment(dateVal, \"dd-MM-YYYY\");\r\n        return `${valueFormatted}`;\r\n      },\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"Course_name\",\r\n      headerName: \"Course\",\r\n      flex: 1,\r\n      minWidth: 10,\r\n    },\r\n    {\r\n      field: \"payment_status\",\r\n      headerName: \"Fee paid\",\r\n      minWidth: 10,\r\n      type: \"boolean\",\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"Fee\",\r\n      headerName: \"Fee\",\r\n      minWidth: 10,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"payment_mode\",\r\n      headerName: \"Payment Mode\",\r\n      minWidth: 10,\r\n      flex: 1,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"razorpayPaymentId\",\r\n      headerName: \"Payment ID\",\r\n      minWidth: 10,\r\n      flex: 1,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"payment_date\",\r\n      headerName: \"Payment Date\",\r\n      minWidth: 10,\r\n      type: \"date\",\r\n      flex: 1,\r\n      hide: true,\r\n    },\r\n    {\r\n      field: \"application_status\",\r\n      headerName: \"Verified\",\r\n      minWidth: 10,\r\n      type: \"boolean\",\r\n      hide: true,\r\n    },\r\n  ];\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <div style={{ display: \"flex\", height: \"100%\" }}>\r\n        <div style={{ flexGrow: 1 }}>\r\n          <DataGrid\r\n            autoHeight\r\n            columns={column}\r\n            rows={data}\r\n            components={{\r\n              Toolbar: CustomToolbar,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"../../axios\";\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\nimport StudentListGrid from \"./StudentListGrid\";\r\nimport {\r\n  InputLabel,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Stack,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport AddBoxOutlinedIcon from \"@mui/icons-material/AddBoxOutlined\";\r\nexport default function StudentList() {\r\n  var collegeID = useSelector((state) => state.collegeID);\r\n  const [data, setdata] = useState([]);\r\n  const [batch, setBatch] = useState(\"\");\r\n  const [batchlist, setBatchList] = useState([]);\r\n  const [loader, setLoader] = useState(false);\r\n  const [semList, setSemlist] = useState([]);\r\n  const [semester, setSemester] = useState(\"\");\r\n  const handleChange = (event) => {\r\n    setBatch(event.target.value);\r\n    axios\r\n      .get(\r\n        \"api/adminerp/semester/list/\" + event.target.value + \"/\" + collegeID,\r\n        {}\r\n      )\r\n      .then((res) => {\r\n        setSemlist(res.data);\r\n      })\r\n      .catch((error) => {\r\n        alert(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  const handleSemChange = (event) => {\r\n    const sem = event.target.value;\r\n    setSemester(event.target.value);\r\n    setLoader(true);\r\n    axios\r\n      .get(\r\n        `api/admission/count/data/` + batch + `/` + sem + `/` + collegeID,\r\n        {}\r\n      )\r\n      .then((res) => {\r\n        setdata(res.data);\r\n        setLoader(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"api/adminerp/batch/list/\" + collegeID)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setBatchList(res.data);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"Error occured:\" + error);\r\n      });\r\n  }, [collegeID]);\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2}>\r\n        <Grid item lg={6} xs={12} sm={12} md={12}>\r\n          <Stack sx={{ width: \"80%\" }} spacing={2}>\r\n            <h4>\r\n              <AddBoxOutlinedIcon className=\"mr-2\" />\r\n              {\"Select Student -> Batch\"}\r\n            </h4>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label\">Batch</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={batch}\r\n                label=\"Batch \"\r\n                onChange={handleChange}\r\n              >\r\n                {batchlist.map((item, index) => (\r\n                  <MenuItem key={index} value={item.Batch}>\r\n                    {item.Batch}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Stack>\r\n        </Grid>\r\n        <Grid item lg={6} xs={12} sm={12} md={12}>\r\n          <Stack sx={{ width: \"80%\" }} spacing={2}>\r\n            <h4>\r\n              <AddBoxOutlinedIcon className=\"mr-2\" />\r\n              {\"Select Student -> Semester\"}\r\n            </h4>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label\">Semester</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={semester}\r\n                label=\"Semester \"\r\n                onChange={handleSemChange}\r\n              >\r\n                {semList.map((item, index) => (\r\n                  <MenuItem key={index} value={item.Sem_ID}>\r\n                    {item.Sem_Name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          marginTop: \"50px\",\r\n          backgroundColor: \"#fff\",\r\n        }}\r\n      >\r\n        {loader ? (\r\n          <div>\r\n            <PuffLoader color=\"#283593\" size=\"80\" />\r\n            Loading Please wait...\r\n          </div>\r\n        ) : (\r\n          <StudentListGrid data={data} />\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, {Component, Suspense, Spinner} from 'react'\r\nimport {MDBContainer} from 'mdbreact'\r\nimport StudentList from './StudentList'\r\n\r\nclass Notifications extends Component {\r\n  constructor(props) {\r\n   \r\n    super(props);\r\n    this.state = {\r\n      \r\n    };\r\n}\r\n \r\n\r\n  render() {\r\n   \r\n    return (\r\n      <MDBContainer className=\"mt-4\" fluid>\r\n          <Suspense fallback={<Spinner />}>\r\n            <StudentList/>\r\n         </Suspense>\r\n      </MDBContainer>\r\n        \r\n    );}\r\n\r\n\r\n\r\n      }\r\n      \r\n      export default Notifications;"],"sourceRoot":""}